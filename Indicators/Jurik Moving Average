//@version=6
indicator("Jurik Moving Average (JMA) Minimal", shorttitle="JMA", overlay=true)

period = input.int(14, title="Period", minval=1)
phase = input.int(0, title="Phase", minval=-100, maxval=100, step=10)
power = input.float(0.45, title="Power", minval=0.1, maxval=1.0, step=0.01)
source = input.source(close, title="Source")

phaseV = math.min(math.max((phase * 0.01) + 1.5, 0.5), 2.5)
beta = power * (period - 1) / ((power * (period - 1)) + 2)
len1 = math.max((math.log(math.sqrt(0.5 * (period - 1))) / math.log(2.0)) + 2.0, 0)
pow1 = math.max(len1 - 2.0, 0.5)
pow1Recip = 1.0 / pow1
alpha = math.pow(beta, pow1Recip)
alphaSqr = alpha * alpha
oneMinusAlpha = 1.0 - alpha
oneMinusAlphaSqr = oneMinusAlpha * oneMinusAlpha

var float ma1 = na
var float det0 = na
var float det1 = na
var float jma = na

ma1 := na(ma1) ? source : source + (alpha * (ma1 - source))
det0 := na(det0) ? 0.0 : (source - ma1) * (1 - beta) + beta * det0
ma2 = ma1 + (phaseV * det0)
det1 := na(det1) ? 0.0 : ((ma2 - nz(jma, source)) * oneMinusAlphaSqr) + (alphaSqr * det1)
jma := na(jma) ? source : nz(jma, source) + det1

jmaColor = jma > jma[1] ? color.lime : color.red

plot(jma, "JMA", color=jmaColor, linewidth=2)
