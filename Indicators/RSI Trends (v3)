//@version=5
indicator("RSI Trends v3 (Static Bands for Trend Clarity)", format=format.price, precision=2, timeframe="", timeframe_gaps=true)

// === INPUT SETTINGS ===
rsiLengthInput = input.int(28, minval=1, title="RSI Length")
rsiSourceInput = input.source(close, "Source")
maLengthInput = input.int(28, title="ZEMA Length")
hmaLength = input.int(14, title="HMA Length")
bandGap = input.int(4, minval=1, maxval=25, title="Gap from 50")
rsiLookback = input.int(55, title="Range Look Back Period")
anchorHMA = input.bool(true, title="Anchor HMA to Midpoint When Range Detected")
hma_threshold = input.float(0.25, step=0.01, title="HMA Slope Threshold")
hmaRSIgate = input.bool(true, title="Enable RSI Gate for HMA Colors")
rsiHighGate = input.float(80, title="RSI High Gate", step=0.1)
rsiLowGate = input.float(20, title="RSI Low Gate", step=0.1)
preserveLastColor = input.bool(true, title="Preserve Last Color When Flat")

// === CALCULATE RSI ===
up = ta.rma(math.max(ta.change(rsiSourceInput), 0), rsiLengthInput)
down = ta.rma(-math.min(ta.change(rsiSourceInput), 0), rsiLengthInput)
rsi = down == 0 ? 100 : up == 0 ? 0 : 100 - (100 / (1 + up / down))

// === ZEMA FUNCTION ===
zema(source, length) =>
    ema1 = ta.ema(source, length)
    ema2 = ta.ema(ema1, length)
    ema1 + (ema1 - ema2)

rsiZEMA = zema(rsi, maLengthInput)

// === STATIC BANDS AROUND 50 ===
rsiUpperBandValue = 50 + bandGap
rsiLowerBandValue = 50 - bandGap
bandMidpoint = 50

// === RANGE DETECTION FUNCTION ===
isPingPongMarket() =>
    maxConsecutive = 5
    aboveCount = 0
    belowCount = 0
    for i = 0 to rsiLookback
        if rsiZEMA[i] > bandMidpoint
            aboveCount := aboveCount + 1
            belowCount := 0
        else if rsiZEMA[i] < bandMidpoint
            belowCount := belowCount + 1
            aboveCount := 0
        if aboveCount > maxConsecutive or belowCount > maxConsecutive
            false
    true

// === ZEMA COLORING ===
numberOfTimesInRange = 0
for i = 0 to rsiLookback
    if (rsiZEMA[i] < rsiUpperBandValue and rsiZEMA[i] > rsiLowerBandValue)
        numberOfTimesInRange := numberOfTimesInRange + 1

rsiZEMAColor = color.gray
if (isPingPongMarket() and numberOfTimesInRange >= rsiLookback)
    rsiZEMAColor := color.purple
else if (rsiZEMA > rsiUpperBandValue)
    rsiZEMAColor := color.green
else if (rsiZEMA < rsiLowerBandValue)
    rsiZEMAColor := color.red

isPurple = rsiZEMAColor == color.purple

// === HMA FUNCTION ===
hma(src, len) =>
    halfLength = math.round(len / 2)
    sqrtLength = math.round(math.sqrt(len))
    wma1 = ta.wma(src, len)
    wma2 = ta.wma(src, halfLength)
    ta.wma(2 * wma2 - wma1, sqrtLength)

// === HMA ON ZEMA OR MIDPOINT (ANCHORING)
zemaProxy = (anchorHMA and isPurple) ? bandMidpoint : rsiZEMA
hmaValue = hma(zemaProxy, hmaLength)
hmaSlope = hmaValue - hmaValue[1]

// === HMA COLOR LOGIC
var color lastHMAColor = color.gray
rawHMAColor = color.gray

if (isPurple and anchorHMA)
    rawHMAColor := color.purple
else if (hmaRSIgate and hmaValue > rsiHighGate)
    rawHMAColor := color.green
else if (hmaRSIgate and hmaValue < rsiLowGate)
    rawHMAColor := color.red
else
    if (hmaSlope > hma_threshold)
        rawHMAColor := color.green
    else if (hmaSlope < -hma_threshold)
        rawHMAColor := color.red
    else
        rawHMAColor := color.gray

hmaColor = rawHMAColor
if preserveLastColor
    if rawHMAColor == color.gray
        hmaColor := lastHMAColor
    else
        hmaColor := rawHMAColor
    if rawHMAColor != color.gray
        lastHMAColor := rawHMAColor

// === PLOTS ===
plot(rsi, "RSI", color=#7E57C2)
plot(rsiZEMA, "RSI-based ZEMA", color=rsiZEMAColor)
plot(hmaValue, "HMA (Smooth Anchored)", color=hmaColor, linewidth=2)

// === STATIC BANDS PLOTS ===
bandColor = color.new(color.orange, 0)
plot(rsiUpperBandValue, title="RSI Upper Band", color=bandColor, linewidth=1)
plot(bandMidpoint, title="RSI Midpoint (50)", color=color.new(bandColor, 50), linewidth=1)
plot(rsiLowerBandValue, title="RSI Lower Band", color=bandColor, linewidth=1)
fill(plot(rsiUpperBandValue), plot(rsiLowerBandValue), color=color.rgb(126, 87, 194, 90), title="RSI Background Fill")

// === GATE LINES ===
plot(rsiHighGate, title="RSI High Gate", color=color.new(color.green, 60), linewidth=1)
plot(rsiLowGate, title="RSI Low Gate", color=color.new(color.red, 60), linewidth=1)
